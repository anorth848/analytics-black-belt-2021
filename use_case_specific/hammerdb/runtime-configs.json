[
    {
        "secret": "da-black-belt-2021/rdbms/rds/primary/spark",
        "target_db_name": "rdbms_analytics",
        "target_table_prefix": "hammerdb",
        "config": "database::config",
        "identifier": "hammerdb"
    },
    {
        "master": {
            "instance_type": "m5.xlarge"
        },
        "step_parallelism": 4,
        "config": "emr::config::full_load",
        "identifier": "hammerdb",
        "worker": {
            "count": "8",
            "instance_type": "r5.2xlarge"
        },
        "run_seed_hudi": true
    },
    {
        "master": {
            "instance_type": "m5.xlarge"
        },
        "step_parallelism": 4,
        "config": "emr::config::seed_hudi",
        "identifier": "hammerdb",
        "worker": {
            "count": "6",
            "instance_type": "r5.2xlarge"
        },
        "run_continuous_hudi": true
    },
    {
        "master": {
            "instance_type": "m4.large"
        },
        "step_parallelism": 10,
        "config": "emr::config::continuous_hudi",
        "identifier": "hammerdb",
        "worker": {
            "count": "8",
            "instance_type": "m4.large"
        }
    },
    {
        "master": {
            "instance_type": "m5.xlarge"
        },
        "step_parallelism": 4,
        "config": "emr::config::incremental_hudi",
        "identifier": "hammerdb",
        "worker": {
            "count": "4",
            "instance_type": "r5.xlarge"
        }
    },
    {
        "hudi_config": {
            "primary_key": "c_w_id,c_d_id,c_id",
            "watermark": "trx_seq",
            "is_partitioned": false
        },
        "config": "table::public.customer",
        "identifier": "hammerdb",
        "enabled": true,
        "spark_jdbc_config": {
            "dbtable": "public.customer",
            "partitionColumn": "c_id",
            "lowerBound": "0",
            "upperBound": "3000",
            "numPartitions": "16"
        },
        "spark_conf": {
            "full_load": {
                "spark.executor.cores": "1",
                "spark.executor.memory": "2g",
                "spark.executor.heartbeatInterval": "30s",
                "spark.network.timeout": "600s",
                "spark.dynamicAllocation.enabled": "false",
                "spark.executor.instances": "8"
            },
            "incremental_hudi": {
                "spark.executor.cores": "2",
                "spark.executor.memory": "2g",
                "spark.dynamicAllocation.minExecutors": "1",
                "spark.dynamicAllocation.maxExecutors": "6"
            },
            "continuous_hudi": {
                "spark.executor.cores": "2",
                "spark.executor.memory": "2g",
                "spark.dynamicAllocation.minExecutors": "1",
                "spark.dynamicAllocation.maxExecutors": "6"
            }
        }
    },
    {
        "hudi_config": {
            "primary_key": "d_w_id,d_id",
            "watermark": "trx_seq",
            "is_partitioned": false
        },
        "config": "table::public.district",
        "identifier": "hammerdb",
        "enabled": true,
        "spark_conf": {
            "continuous_hudi": {
                "spark.executor.cores": "1",
                "spark.dynamicAllocation.minExecutors": "1",
                "spark.dynamicAllocation.maxExecutors": "2"
            }
        }
    },
    {
        "hudi_config": {
            "primary_key": "i_id",
            "watermark": "trx_seq",
            "is_partitioned": false
        },
        "config": "table::public.item",
        "identifier": "hammerdb",
        "enabled": true,
        "spark_conf": {
            "continuous_hudi": {
                "spark.executor.cores": "1",
                "spark.dynamicAllocation.minExecutors": "1",
                "spark.dynamicAllocation.maxExecutors": "2"
            }
        }
    },
    {
        "hudi_config": {
            "primary_key": "no_w_id,no_d_id,no_o_id",
            "watermark": "trx_seq",
            "is_partitioned": false
        },
        "config": "table::public.new_order",
        "identifier": "hammerdb",
        "enabled": true,
        "spark_conf": {
            "continuous_hudi": {
                "spark.executor.cores": "1",
                "spark.dynamicAllocation.minExecutors": "1",
                "spark.dynamicAllocation.maxExecutors": "2"
            }
        }
    },
    {
        "hudi_config": {
            "primary_key": "ol_w_id,ol_d_id,ol_o_id,ol_number",
            "watermark": "trx_seq",
            "is_partitioned": true,
            "partition_path": "ol_w_id",
            "partition_extractor_class": "org.apache.hudi.hive.MultiPartKeysValueExtractor"
        },
        "config": "table::public.order_line",
        "identifier": "hammerdb",
        "enabled": true,
        "spark_jdbc_config": {
            "dbtable": "public.order_line",
            "partitionColumn": "ol_w_id",
            "lowerBound": "0",
            "upperBound": "400",
            "numPartitions": "20"
        },
        "spark_conf": {
            "full_load": {
                "spark.executor.cores": "4",
                "spark.executor.memory": "14g",
                "spark.executor.heartbeatInterval": "60s",
                "spark.network.timeout": "1200s",
                "spark.dynamicAllocation.enabled": "false",
                "spark.executor.instances": "16"
            },
            "incremental_hudi": {
                "spark.executor.cores": "2",
                "spark.executor.memory": "6g",
                "spark.executor.heartbeatInterval": "30s",
                "spark.network.timeout": "600s",
                "spark.dynamicAllocation.minExecutors": "2",
                "spark.dynamicAllocation.maxExecutors": "12"
            },
            "continuous_hudi": {
                "spark.executor.cores": "2",
                "spark.executor.memory": "4g",
                "spark.executor.heartbeatInterval": "30s",
                "spark.network.timeout": "300s",
                "spark.dynamicAllocation.minExecutors": "2",
                "spark.dynamicAllocation.maxExecutors": "10"
            }
        }
    },
    {
        "hudi_config": {
            "primary_key": "o_w_id,o_d_id,o_id",
            "watermark": "trx_seq",
            "is_partitioned": false
        },
        "config": "table::public.orders",
        "identifier": "hammerdb",
        "enabled": true,
        "spark_conf": {
            "continuous_hudi": {
                "spark.executor.cores": "1",
                "spark.dynamicAllocation.minExecutors": "1",
                "spark.dynamicAllocation.maxExecutors": "2"
            }
        }
    },
    {
        "hudi_config": {
            "primary_key": "s_i_id,s_w_id",
            "watermark": "trx_seq",
            "is_partitioned": true,
            "partition_path": "s_w_id",
            "partition_extractor_class": "org.apache.hudi.hive.MultiPartKeysValueExtractor"
        },
        "config": "table::public.stock",
        "identifier": "hammerdb",
        "enabled": true,
        "spark_jdbc_config": {
            "dbtable": "public.stock",
            "partitionColumn": "s_i_id",
            "lowerBound": "0",
            "upperBound": "100000",
            "numPartitions": "16"
        },
        "spark_conf": {
            "full_load": {
                "spark.executor.cores": "2",
                "spark.executor.memory": "8g",
                "spark.executor.heartbeatInterval": "60s",
                "spark.network.timeout": "1200s",
                "spark.dynamicAllocation.enabled": "false",
                "spark.executor.instances": "8"
            },
            "incremental_hudi": {
                "spark.executor.cores": "2",
                "spark.executor.memory": "6g",
                "spark.executor.heartbeatInterval": "30s",
                "spark.network.timeout": "600s",
                "spark.dynamicAllocation.minExecutors": "2",
                "spark.dynamicAllocation.maxExecutors": "8"
            },
            "continuous_hudi": {
                "spark.executor.cores": "2",
                "spark.executor.memory": "4g",
                "spark.executor.heartbeatInterval": "30s",
                "spark.network.timeout": "300s",
                "spark.dynamicAllocation.minExecutors": "2",
                "spark.dynamicAllocation.maxExecutors": "6"
            }
        }
    },
    {
        "hudi_config": {
            "primary_key": "w_id",
            "watermark": "trx_seq",
            "is_partitioned": false
        },
        "config": "table::public.warehouse",
        "identifier": "hammerdb",
        "enabled": true,
        "spark_conf": {
            "continuous_hudi": {
                "spark.executor.cores": "1",
                "spark.dynamicAllocation.minExecutors": "1",
                "spark.dynamicAllocation.maxExecutors": "2"
            }
        }
    },
    {
        "secret": "da-black-belt-2021/rdbms/hammerdb-fail",
        "target_db_name": "rdbms_analytics",
        "target_table_prefix": "hammerdb",
        "config": "database::config",
        "identifier": "hammerdb-fail"
    },
    {
        "master": {
            "instance_type": "m5.xlarge"
        },
        "step_parallelism": 1,
        "config": "emr::config::full_load",
        "identifier": "hammerdb-fail",
        "worker": {
            "count": 1,
            "instance_type": "m5.2xlarge"
        },
        "spark_conf": {
            "spark": {
                "dynamicAllocation": {
                    "initialExecutors": "1"
                }
            }
        }
    },
    {
        "hudi_config": {
            "primary_key": "ol_w_id, ol_d_id, ol_o_id, ol_number",
            "watermark": "trx_seq",
            "is_partitioned": true,
            "partition_path": "part_w_id",
            "transformer_class": "org.apache.hudi.utilities.transform.SqlQueryBasedTransformer",
            "transformer_sql": "SELECT s.*, concat(cast(s.ol_w_id as string), '/') as part_w_id FROM <SRC> s"
        },
        "config": "table::public.order_line_fail",
        "identifier": "hammerdb-fail",
        "override_target_table_name": "hammerdb_public_order_line2",
        "enabled": true,
        "spark_jdbc_config": {
            "partitionColumn": "ol_w_id",
            "lowerBound": "0",
            "upperBound": "400",
            "numPartitions": "16"
        },
        "spark_conf": {
            "full_load": {
                "spark.executor.cores": "2",
                "spark.executor.memory": "4g"
            }
        }
    }
]
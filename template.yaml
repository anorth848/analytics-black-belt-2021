AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Parent template for all components related to the project

Parameters:
  UseCase:
    Type: String
    Default: hammerdb
    AllowedPattern: "[a-z_]+"
    Description: The use case. This will be used for naming resources throughout nested stacks.

  EmrEc2SubnetId:
    Type: String
    AllowedPattern: "subnet-[a-f0-9]+"
    Description: Subnet EMR clusters will run in

  CreateQuickSightInfrastructure:
    Type: String
    AllowedValues: ['TRUE', 'FALSE']
    Default: 'FALSE'

  CreateNetworkInfrastructure:
    Type: String
    AllowedValues: [ 'TRUE', 'FALSE' ]
    Default: 'FALSE'

Conditions:
  CreateQuickSightInfrastructure: !Equals
    - !Ref CreateQuickSightInfrastructure
    - 'TRUE'
  CreateNetworkInfrastructure: !Equals
    - !Ref CreateNetworkInfrastructure
    - 'TRUE'

Resources:
  NetworkInfrastructureStack:
    Type: AWS::Serverless::Application
    Condition: CreateNetworkInfrastructure
    Properties:
      Location: templates/network-infrastructure.yaml
      Parameters:
        UseCase: !Ref UseCase
        ParentStack: !Ref AWS::StackName

  DataLakeStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: templates/datalake.yaml
      Parameters:
        UseCase: !Ref UseCase
        ParentStack: !Ref AWS::StackName

  DataLakeBucketPolicyStack:
    Type: AWS::Serverless::Application
    Condition: CreateNetworkInfrastructure
    DependsOn: [ NetworkInfrastructureStack, DataLakeStack ]
    Properties:
      Location: templates/datalake-bucketpolicy.yaml
      Parameters:
        ParentStack: !Ref AWS::StackName

  CicdInfrastructureStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: templates/cicd-infrastructure.yaml
      Parameters:
        ParentStack: !Ref AWS::StackName

  RuntimeInfrastructureStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: templates/runtime-infrastructure.yaml
      Parameters:
        ParentStack: !Ref AWS::StackName
        UseCase: !Ref UseCase
        CreateNetworkInfrastructure: !Ref CreateNetworkInfrastructure

  SecretsStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: templates/secrets.yaml
      Parameters:
        SecretName: !Ref UseCase
        ParentStack: !Ref AWS::StackName

  FullPipelineStack:
    Type: AWS::Serverless::Application
    DependsOn: [ RuntimeInfrastructureStack, CicdInfrastructureStack, DataLakeStack ]
    Properties:
      Location: templates/full-pipeline.yaml
      Parameters:
        ParentStack: !Ref AWS::StackName
        EmrEc2SubnetId: !If [ CreateNetworkInfrastructure, "", !Ref EmrEc2SubnetId ]

  #  This stack assumes you've enabled QuickSight in this account and have access from your IAM credentials
  #  and Parameter CreateQuickSightInfrastructure set to 'TRUE'
  QuickSightInfrastructureStack:
    Type: AWS::Serverless::Application
    Condition: CreateQuickSightInfrastructure
    DependsOn: [ DataLakeStack ]
    Properties:
      Location: templates/quicksight-infrastructure.yaml
      Parameters:
        UseCase: !Ref UseCase
        ParentStack: !Ref AWS::StackName
